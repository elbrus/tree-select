{"version":3,"sources":["webpack:///./examples/dynamic.js"],"names":["Demo","createClass","propTypes","getInitialState","treeData","label","value","key","isLeaf","onChange","console","log","setState","onLoadData","treeNode","Promise","resolve","setTimeout","state","props","eventKey","render","padding","width","document","getElementById"],"mappings":";;;;;;;;;;;;;;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;qMANA;;AAQA,KAAMA,OAAO,gBAAMC,WAAN,CAAkB;AAAA;;AAC7BC,cAAW,EADkB;AAE7BC,kBAF6B,6BAEX;AAChB,YAAO;AACLC,iBAAU,CACR,EAAEC,OAAO,UAAT,EAAqBC,OAAO,KAA5B,EAAmCC,KAAK,KAAxC,EADQ,EAER,EAAEF,OAAO,UAAT,EAAqBC,OAAO,KAA5B,EAAmCC,KAAK,KAAxC,EAFQ,EAGR,EAAEF,OAAO,UAAT,EAAqBC,OAAO,KAA5B,EAAmCC,KAAK,KAAxC,EAA+CC,QAAQ,IAAvD,EAHQ,CADL;AAML;AACAF,cAAO,EAAEA,OAAO,aAAT,EAAwBD,OAAO,aAA/B;AAPF,MAAP;AASD,IAZ4B;AAa7BI,WAb6B,oBAapBH,KAboB,EAab;AACdI,aAAQC,GAAR,CAAYL,KAAZ;AACA,UAAKM,QAAL,CAAc;AACZN;AADY,MAAd;AAGD,IAlB4B;AAmB7BO,aAnB6B,sBAmBlBC,QAnBkB,EAmBR;AAAA;;AACnBJ,aAAQC,GAAR,CAAYG,QAAZ;AACA,YAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AAC9BC,kBAAW,YAAM;AACf,aAAMb,wCAAe,MAAKc,KAAL,CAAWd,QAA1B,EAAN;AACA,mCAAeA,QAAf,EAAyBU,SAASK,KAAT,CAAeC,QAAxC,EAAkD,6BAAkBN,QAAlB,CAAlD,EAA+E,CAA/E;AACA,eAAKF,QAAL,CAAc,EAAER,kBAAF,EAAd;AACAY;AACD,QALD,EAKG,GALH;AAMD,MAPM,CAAP;AAQD,IA7B4B;AA8B7BK,SA9B6B,oBA8BpB;AACP,YACE;AAAA;AAAA,SAAK,OAAO,EAAEC,SAAS,WAAX,EAAZ;AACE;AAAA;AAAA;AAAA;AAAA,QADF;AAEE;AACE,gBAAO,EAAEC,OAAO,GAAT,EADT;AAEE,mBAAU,KAAKL,KAAL,CAAWd,QAFvB;AAGE,2BAHF;AAIE,gBAAO,KAAKc,KAAL,CAAWZ,KAJpB;AAKE,mBAAU,KAAKG,QALjB;AAME,mBAAU,KAAKI;AANjB;AAFF,MADF;AAaD;AA5C4B,EAAlB,CAAb;;AA+CA,oBAASQ,MAAT,CAAgB,8BAAC,IAAD,OAAhB,EAA0BG,SAASC,cAAT,CAAwB,iBAAxB,CAA1B,E","file":"dynamic.js","sourcesContent":["/* eslint react/no-multi-comp:0, no-console:0 */\r\n\r\nimport 'rc-tree-select/assets/index.less';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TreeSelect from 'rc-tree-select';\r\nimport { getNewTreeData, generateTreeNodes } from './util';\r\n\r\nconst Demo = React.createClass({\r\n  propTypes: {},\r\n  getInitialState() {\r\n    return {\r\n      treeData: [\r\n        { label: 'pNode 01', value: '0-0', key: '0-0' },\r\n        { label: 'pNode 02', value: '0-1', key: '0-1' },\r\n        { label: 'pNode 03', value: '0-2', key: '0-2', isLeaf: true },\r\n      ],\r\n      // value: '0-0',\r\n      value: { value: '0-0-0-value', label: '0-0-0-label' },\r\n    };\r\n  },\r\n  onChange(value) {\r\n    console.log(value);\r\n    this.setState({\r\n      value,\r\n    });\r\n  },\r\n  onLoadData(treeNode) {\r\n    console.log(treeNode);\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        const treeData = [...this.state.treeData];\r\n        getNewTreeData(treeData, treeNode.props.eventKey, generateTreeNodes(treeNode), 2);\r\n        this.setState({ treeData });\r\n        resolve();\r\n      }, 500);\r\n    });\r\n  },\r\n  render() {\r\n    return (\r\n      <div style={{ padding: '10px 30px' }}>\r\n        <h2>dynamic render</h2>\r\n        <TreeSelect\r\n          style={{ width: 300 }}\r\n          treeData={this.state.treeData}\r\n          labelInValue\r\n          value={this.state.value}\r\n          onChange={this.onChange}\r\n          loadData={this.onLoadData}\r\n        />\r\n      </div>\r\n    );\r\n  },\r\n});\r\n\r\nReactDOM.render(<Demo />, document.getElementById('__react-content'));\r\n\n\n\n// WEBPACK FOOTER //\n// ./examples/dynamic.js"],"sourceRoot":""}